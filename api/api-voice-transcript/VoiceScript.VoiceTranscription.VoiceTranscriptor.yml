### YamlMime:ManagedReference
items:
- uid: VoiceScript.VoiceTranscription.VoiceTranscriptor
  commentId: T:VoiceScript.VoiceTranscription.VoiceTranscriptor
  id: VoiceTranscriptor
  parent: VoiceScript.VoiceTranscription
  children:
  - VoiceScript.VoiceTranscription.VoiceTranscriptor.#ctor(VoiceScript.VoiceTranscription.IAudioRecorder)
  - VoiceScript.VoiceTranscription.VoiceTranscriptor.Configuration
  - VoiceScript.VoiceTranscription.VoiceTranscriptor.CreateTranscriptionTask(System.String,System.Action{System.String})
  - VoiceScript.VoiceTranscription.VoiceTranscriptor.DoRealTimeTranscription(System.Action{System.String})
  langs:
  - csharp
  - vb
  name: VoiceTranscriptor
  nameWithType: VoiceTranscriptor
  fullName: VoiceScript.VoiceTranscription.VoiceTranscriptor
  type: Class
  source:
    id: VoiceTranscriptor
    path: ''
    startLine: 437
  assemblies:
  - cs.temp.dll
  namespace: VoiceScript.VoiceTranscription
  summary: "\nManages voice transcription from audio to text\nusing Google Cloud speech-to-text API.\n"
  example: []
  syntax:
    content: 'public class VoiceTranscriptor : IVoiceTranscriptor'
    content.vb: >-
      Public Class VoiceTranscriptor
          Implements IVoiceTranscriptor
  inheritance:
  - System.Object
  implements:
  - VoiceScript.VoiceTranscription.IVoiceTranscriptor
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VoiceScript.VoiceTranscription.VoiceTranscriptor.#ctor(VoiceScript.VoiceTranscription.IAudioRecorder)
  commentId: M:VoiceScript.VoiceTranscription.VoiceTranscriptor.#ctor(VoiceScript.VoiceTranscription.IAudioRecorder)
  id: '#ctor(VoiceScript.VoiceTranscription.IAudioRecorder)'
  parent: VoiceScript.VoiceTranscription.VoiceTranscriptor
  langs:
  - csharp
  - vb
  name: VoiceTranscriptor(IAudioRecorder)
  nameWithType: VoiceTranscriptor.VoiceTranscriptor(IAudioRecorder)
  fullName: VoiceScript.VoiceTranscription.VoiceTranscriptor.VoiceTranscriptor(VoiceScript.VoiceTranscription.IAudioRecorder)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 446
  assemblies:
  - cs.temp.dll
  namespace: VoiceScript.VoiceTranscription
  syntax:
    content: public VoiceTranscriptor(IAudioRecorder audioRecorder)
    parameters:
    - id: audioRecorder
      type: VoiceScript.VoiceTranscription.IAudioRecorder
    content.vb: Public Sub New(audioRecorder As IAudioRecorder)
  overload: VoiceScript.VoiceTranscription.VoiceTranscriptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VoiceScript.VoiceTranscription.VoiceTranscriptor.Configuration
  commentId: P:VoiceScript.VoiceTranscription.VoiceTranscriptor.Configuration
  id: Configuration
  parent: VoiceScript.VoiceTranscription.VoiceTranscriptor
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: VoiceTranscriptor.Configuration
  fullName: VoiceScript.VoiceTranscription.VoiceTranscriptor.Configuration
  type: Property
  source:
    id: Configuration
    path: ''
    startLine: 464
  assemblies:
  - cs.temp.dll
  namespace: VoiceScript.VoiceTranscription
  syntax:
    content: public RecognitionConfig Configuration { get; }
    parameters: []
    return:
      type: RecognitionConfig
    content.vb: Public ReadOnly Property Configuration As RecognitionConfig
  overload: VoiceScript.VoiceTranscription.VoiceTranscriptor.Configuration*
  implements:
  - VoiceScript.VoiceTranscription.IVoiceTranscriptor.Configuration
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VoiceScript.VoiceTranscription.VoiceTranscriptor.DoRealTimeTranscription(System.Action{System.String})
  commentId: M:VoiceScript.VoiceTranscription.VoiceTranscriptor.DoRealTimeTranscription(System.Action{System.String})
  id: DoRealTimeTranscription(System.Action{System.String})
  parent: VoiceScript.VoiceTranscription.VoiceTranscriptor
  langs:
  - csharp
  - vb
  name: DoRealTimeTranscription(Action<String>)
  nameWithType: VoiceTranscriptor.DoRealTimeTranscription(Action<String>)
  fullName: VoiceScript.VoiceTranscription.VoiceTranscriptor.DoRealTimeTranscription(System.Action<System.String>)
  type: Method
  source:
    id: DoRealTimeTranscription
    path: ''
    startLine: 466
  assemblies:
  - cs.temp.dll
  namespace: VoiceScript.VoiceTranscription
  syntax:
    content: public void DoRealTimeTranscription(Action<string> callback)
    parameters:
    - id: callback
      type: System.Action{System.String}
    content.vb: Public Sub DoRealTimeTranscription(callback As Action(Of String))
  overload: VoiceScript.VoiceTranscription.VoiceTranscriptor.DoRealTimeTranscription*
  implements:
  - VoiceScript.VoiceTranscription.IVoiceTranscriptor.DoRealTimeTranscription(System.Action{System.String})
  nameWithType.vb: VoiceTranscriptor.DoRealTimeTranscription(Action(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VoiceScript.VoiceTranscription.VoiceTranscriptor.DoRealTimeTranscription(System.Action(Of System.String))
  name.vb: DoRealTimeTranscription(Action(Of String))
- uid: VoiceScript.VoiceTranscription.VoiceTranscriptor.CreateTranscriptionTask(System.String,System.Action{System.String})
  commentId: M:VoiceScript.VoiceTranscription.VoiceTranscriptor.CreateTranscriptionTask(System.String,System.Action{System.String})
  id: CreateTranscriptionTask(System.String,System.Action{System.String})
  parent: VoiceScript.VoiceTranscription.VoiceTranscriptor
  langs:
  - csharp
  - vb
  name: CreateTranscriptionTask(String, Action<String>)
  nameWithType: VoiceTranscriptor.CreateTranscriptionTask(String, Action<String>)
  fullName: VoiceScript.VoiceTranscription.VoiceTranscriptor.CreateTranscriptionTask(System.String, System.Action<System.String>)
  type: Method
  source:
    id: CreateTranscriptionTask
    path: ''
    startLine: 471
  assemblies:
  - cs.temp.dll
  namespace: VoiceScript.VoiceTranscription
  syntax:
    content: public Task CreateTranscriptionTask(string filename, Action<string> callback)
    parameters:
    - id: filename
      type: System.String
    - id: callback
      type: System.Action{System.String}
    return:
      type: Task
    content.vb: Public Function CreateTranscriptionTask(filename As String, callback As Action(Of String)) As Task
  overload: VoiceScript.VoiceTranscription.VoiceTranscriptor.CreateTranscriptionTask*
  implements:
  - VoiceScript.VoiceTranscription.IVoiceTranscriptor.CreateTranscriptionTask(System.String,System.Action{System.String})
  nameWithType.vb: VoiceTranscriptor.CreateTranscriptionTask(String, Action(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VoiceScript.VoiceTranscription.VoiceTranscriptor.CreateTranscriptionTask(System.String, System.Action(Of System.String))
  name.vb: CreateTranscriptionTask(String, Action(Of String))
references:
- uid: VoiceScript.VoiceTranscription
  commentId: N:VoiceScript.VoiceTranscription
  name: VoiceScript.VoiceTranscription
  nameWithType: VoiceScript.VoiceTranscription
  fullName: VoiceScript.VoiceTranscription
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VoiceScript.VoiceTranscription.IVoiceTranscriptor
  commentId: T:VoiceScript.VoiceTranscription.IVoiceTranscriptor
  parent: VoiceScript.VoiceTranscription
  name: IVoiceTranscriptor
  nameWithType: IVoiceTranscriptor
  fullName: VoiceScript.VoiceTranscription.IVoiceTranscriptor
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VoiceScript.VoiceTranscription.VoiceTranscriptor.#ctor*
  commentId: Overload:VoiceScript.VoiceTranscription.VoiceTranscriptor.#ctor
  name: VoiceTranscriptor
  nameWithType: VoiceTranscriptor.VoiceTranscriptor
  fullName: VoiceScript.VoiceTranscription.VoiceTranscriptor.VoiceTranscriptor
- uid: VoiceScript.VoiceTranscription.IAudioRecorder
  commentId: T:VoiceScript.VoiceTranscription.IAudioRecorder
  parent: VoiceScript.VoiceTranscription
  name: IAudioRecorder
  nameWithType: IAudioRecorder
  fullName: VoiceScript.VoiceTranscription.IAudioRecorder
- uid: VoiceScript.VoiceTranscription.VoiceTranscriptor.Configuration*
  commentId: Overload:VoiceScript.VoiceTranscription.VoiceTranscriptor.Configuration
  name: Configuration
  nameWithType: VoiceTranscriptor.Configuration
  fullName: VoiceScript.VoiceTranscription.VoiceTranscriptor.Configuration
- uid: VoiceScript.VoiceTranscription.IVoiceTranscriptor.Configuration
  commentId: P:VoiceScript.VoiceTranscription.IVoiceTranscriptor.Configuration
  parent: VoiceScript.VoiceTranscription.IVoiceTranscriptor
  name: Configuration
  nameWithType: IVoiceTranscriptor.Configuration
  fullName: VoiceScript.VoiceTranscription.IVoiceTranscriptor.Configuration
- uid: RecognitionConfig
  isExternal: true
  name: RecognitionConfig
  nameWithType: RecognitionConfig
  fullName: RecognitionConfig
- uid: VoiceScript.VoiceTranscription.VoiceTranscriptor.DoRealTimeTranscription*
  commentId: Overload:VoiceScript.VoiceTranscription.VoiceTranscriptor.DoRealTimeTranscription
  name: DoRealTimeTranscription
  nameWithType: VoiceTranscriptor.DoRealTimeTranscription
  fullName: VoiceScript.VoiceTranscription.VoiceTranscriptor.DoRealTimeTranscription
- uid: VoiceScript.VoiceTranscription.IVoiceTranscriptor.DoRealTimeTranscription(System.Action{System.String})
  commentId: M:VoiceScript.VoiceTranscription.IVoiceTranscriptor.DoRealTimeTranscription(System.Action{System.String})
  parent: VoiceScript.VoiceTranscription.IVoiceTranscriptor
  isExternal: true
  name: DoRealTimeTranscription(Action<String>)
  nameWithType: IVoiceTranscriptor.DoRealTimeTranscription(Action<String>)
  fullName: VoiceScript.VoiceTranscription.IVoiceTranscriptor.DoRealTimeTranscription(System.Action<System.String>)
  nameWithType.vb: IVoiceTranscriptor.DoRealTimeTranscription(Action(Of String))
  fullName.vb: VoiceScript.VoiceTranscription.IVoiceTranscriptor.DoRealTimeTranscription(System.Action(Of System.String))
  name.vb: DoRealTimeTranscription(Action(Of String))
  spec.csharp:
  - uid: VoiceScript.VoiceTranscription.IVoiceTranscriptor.DoRealTimeTranscription(System.Action{System.String})
    name: DoRealTimeTranscription
    nameWithType: IVoiceTranscriptor.DoRealTimeTranscription
    fullName: VoiceScript.VoiceTranscription.IVoiceTranscriptor.DoRealTimeTranscription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VoiceScript.VoiceTranscription.IVoiceTranscriptor.DoRealTimeTranscription(System.Action{System.String})
    name: DoRealTimeTranscription
    nameWithType: IVoiceTranscriptor.DoRealTimeTranscription
    fullName: VoiceScript.VoiceTranscription.IVoiceTranscriptor.DoRealTimeTranscription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.String}
  commentId: T:System.Action{System.String}
  parent: System
  definition: System.Action`1
  name: Action<String>
  nameWithType: Action<String>
  fullName: System.Action<System.String>
  nameWithType.vb: Action(Of String)
  fullName.vb: System.Action(Of System.String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VoiceScript.VoiceTranscription.VoiceTranscriptor.CreateTranscriptionTask*
  commentId: Overload:VoiceScript.VoiceTranscription.VoiceTranscriptor.CreateTranscriptionTask
  name: CreateTranscriptionTask
  nameWithType: VoiceTranscriptor.CreateTranscriptionTask
  fullName: VoiceScript.VoiceTranscription.VoiceTranscriptor.CreateTranscriptionTask
- uid: VoiceScript.VoiceTranscription.IVoiceTranscriptor.CreateTranscriptionTask(System.String,System.Action{System.String})
  commentId: M:VoiceScript.VoiceTranscription.IVoiceTranscriptor.CreateTranscriptionTask(System.String,System.Action{System.String})
  parent: VoiceScript.VoiceTranscription.IVoiceTranscriptor
  isExternal: true
  name: CreateTranscriptionTask(String, Action<String>)
  nameWithType: IVoiceTranscriptor.CreateTranscriptionTask(String, Action<String>)
  fullName: VoiceScript.VoiceTranscription.IVoiceTranscriptor.CreateTranscriptionTask(System.String, System.Action<System.String>)
  nameWithType.vb: IVoiceTranscriptor.CreateTranscriptionTask(String, Action(Of String))
  fullName.vb: VoiceScript.VoiceTranscription.IVoiceTranscriptor.CreateTranscriptionTask(System.String, System.Action(Of System.String))
  name.vb: CreateTranscriptionTask(String, Action(Of String))
  spec.csharp:
  - uid: VoiceScript.VoiceTranscription.IVoiceTranscriptor.CreateTranscriptionTask(System.String,System.Action{System.String})
    name: CreateTranscriptionTask
    nameWithType: IVoiceTranscriptor.CreateTranscriptionTask
    fullName: VoiceScript.VoiceTranscription.IVoiceTranscriptor.CreateTranscriptionTask
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VoiceScript.VoiceTranscription.IVoiceTranscriptor.CreateTranscriptionTask(System.String,System.Action{System.String})
    name: CreateTranscriptionTask
    nameWithType: IVoiceTranscriptor.CreateTranscriptionTask
    fullName: VoiceScript.VoiceTranscription.IVoiceTranscriptor.CreateTranscriptionTask
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
