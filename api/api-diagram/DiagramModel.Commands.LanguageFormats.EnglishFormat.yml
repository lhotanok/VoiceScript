### YamlMime:ManagedReference
items:
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat
  commentId: T:DiagramModel.Commands.LanguageFormats.EnglishFormat
  id: EnglishFormat
  parent: DiagramModel.Commands.LanguageFormats
  children:
  - DiagramModel.Commands.LanguageFormats.EnglishFormat.Code
  - DiagramModel.Commands.LanguageFormats.EnglishFormat.CommandFormats
  - DiagramModel.Commands.LanguageFormats.EnglishFormat.ComponentNames
  - DiagramModel.Commands.LanguageFormats.EnglishFormat.DelimiterFormat
  - DiagramModel.Commands.LanguageFormats.EnglishFormat.GetCode
  - DiagramModel.Commands.LanguageFormats.EnglishFormat.TargetValuesToReplace
  langs:
  - csharp
  - vb
  name: EnglishFormat
  nameWithType: EnglishFormat
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat
  type: Class
  source:
    id: EnglishFormat
    path: ''
    startLine: 785
  assemblies:
  - cs.temp.dll
  namespace: DiagramModel.Commands.LanguageFormats
  syntax:
    content: 'public class EnglishFormat : LanguageFormat'
    content.vb: >-
      Public Class EnglishFormat
          Inherits LanguageFormat
  inheritance:
  - System.Object
  - DiagramModel.Commands.LanguageFormats.LanguageFormat
  inheritedMembers:
  - DiagramModel.Commands.LanguageFormats.LanguageFormat.ComponentNameFormat
  - DiagramModel.Commands.LanguageFormats.LanguageFormat.GetFormats(System.String)
  - DiagramModel.Commands.LanguageFormats.LanguageFormat.GetAllCommandFormats
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat.CommandFormats
  commentId: P:DiagramModel.Commands.LanguageFormats.EnglishFormat.CommandFormats
  id: CommandFormats
  parent: DiagramModel.Commands.LanguageFormats.EnglishFormat
  langs:
  - csharp
  - vb
  name: CommandFormats
  nameWithType: EnglishFormat.CommandFormats
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat.CommandFormats
  type: Property
  source:
    id: CommandFormats
    path: ''
    startLine: 834
  assemblies:
  - cs.temp.dll
  namespace: DiagramModel.Commands.LanguageFormats
  syntax:
    content: public override Dictionary<string, List<string>> CommandFormats { get; }
    parameters: []
    return:
      type: Dictionary{System.String,List{System.String}}
    content.vb: Public Overrides ReadOnly Property CommandFormats As Dictionary(Of String, List(Of String))
  overridden: DiagramModel.Commands.LanguageFormats.LanguageFormat.CommandFormats
  overload: DiagramModel.Commands.LanguageFormats.EnglishFormat.CommandFormats*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat.ComponentNames
  commentId: P:DiagramModel.Commands.LanguageFormats.EnglishFormat.ComponentNames
  id: ComponentNames
  parent: DiagramModel.Commands.LanguageFormats.EnglishFormat
  langs:
  - csharp
  - vb
  name: ComponentNames
  nameWithType: EnglishFormat.ComponentNames
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat.ComponentNames
  type: Property
  source:
    id: ComponentNames
    path: ''
    startLine: 836
  assemblies:
  - cs.temp.dll
  namespace: DiagramModel.Commands.LanguageFormats
  syntax:
    content: public override Dictionary<string, string> ComponentNames { get; }
    parameters: []
    return:
      type: Dictionary{System.String,System.String}
    content.vb: Public Overrides ReadOnly Property ComponentNames As Dictionary(Of String, String)
  overridden: DiagramModel.Commands.LanguageFormats.LanguageFormat.ComponentNames
  overload: DiagramModel.Commands.LanguageFormats.EnglishFormat.ComponentNames*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat.DelimiterFormat
  commentId: P:DiagramModel.Commands.LanguageFormats.EnglishFormat.DelimiterFormat
  id: DelimiterFormat
  parent: DiagramModel.Commands.LanguageFormats.EnglishFormat
  langs:
  - csharp
  - vb
  name: DelimiterFormat
  nameWithType: EnglishFormat.DelimiterFormat
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat.DelimiterFormat
  type: Property
  source:
    id: DelimiterFormat
    path: ''
    startLine: 838
  assemblies:
  - cs.temp.dll
  namespace: DiagramModel.Commands.LanguageFormats
  syntax:
    content: public override string DelimiterFormat { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property DelimiterFormat As String
  overridden: DiagramModel.Commands.LanguageFormats.LanguageFormat.DelimiterFormat
  overload: DiagramModel.Commands.LanguageFormats.EnglishFormat.DelimiterFormat*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat.GetCode
  commentId: M:DiagramModel.Commands.LanguageFormats.EnglishFormat.GetCode
  id: GetCode
  parent: DiagramModel.Commands.LanguageFormats.EnglishFormat
  langs:
  - csharp
  - vb
  name: GetCode()
  nameWithType: EnglishFormat.GetCode()
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat.GetCode()
  type: Method
  source:
    id: GetCode
    path: ''
    startLine: 840
  assemblies:
  - cs.temp.dll
  namespace: DiagramModel.Commands.LanguageFormats
  syntax:
    content: public static string GetCode()
    return:
      type: System.String
    content.vb: Public Shared Function GetCode As String
  overload: DiagramModel.Commands.LanguageFormats.EnglishFormat.GetCode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat.Code
  commentId: P:DiagramModel.Commands.LanguageFormats.EnglishFormat.Code
  id: Code
  parent: DiagramModel.Commands.LanguageFormats.EnglishFormat
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: EnglishFormat.Code
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat.Code
  type: Property
  source:
    id: Code
    path: ''
    startLine: 841
  assemblies:
  - cs.temp.dll
  namespace: DiagramModel.Commands.LanguageFormats
  syntax:
    content: public override string Code { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Code As String
  overridden: DiagramModel.Commands.LanguageFormats.LanguageFormat.Code
  overload: DiagramModel.Commands.LanguageFormats.EnglishFormat.Code*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat.TargetValuesToReplace
  commentId: P:DiagramModel.Commands.LanguageFormats.EnglishFormat.TargetValuesToReplace
  id: TargetValuesToReplace
  parent: DiagramModel.Commands.LanguageFormats.EnglishFormat
  langs:
  - csharp
  - vb
  name: TargetValuesToReplace
  nameWithType: EnglishFormat.TargetValuesToReplace
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat.TargetValuesToReplace
  type: Property
  source:
    id: TargetValuesToReplace
    path: ''
    startLine: 843
  assemblies:
  - cs.temp.dll
  namespace: DiagramModel.Commands.LanguageFormats
  syntax:
    content: public override Dictionary<string, string> TargetValuesToReplace { get; }
    parameters: []
    return:
      type: Dictionary{System.String,System.String}
    content.vb: Public Overrides ReadOnly Property TargetValuesToReplace As Dictionary(Of String, String)
  overridden: DiagramModel.Commands.LanguageFormats.LanguageFormat.TargetValuesToReplace
  overload: DiagramModel.Commands.LanguageFormats.EnglishFormat.TargetValuesToReplace*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: DiagramModel.Commands.LanguageFormats
  commentId: N:DiagramModel.Commands.LanguageFormats
  name: DiagramModel.Commands.LanguageFormats
  nameWithType: DiagramModel.Commands.LanguageFormats
  fullName: DiagramModel.Commands.LanguageFormats
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DiagramModel.Commands.LanguageFormats.LanguageFormat
  commentId: T:DiagramModel.Commands.LanguageFormats.LanguageFormat
  parent: DiagramModel.Commands.LanguageFormats
  name: LanguageFormat
  nameWithType: LanguageFormat
  fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat
- uid: DiagramModel.Commands.LanguageFormats.LanguageFormat.ComponentNameFormat
  commentId: P:DiagramModel.Commands.LanguageFormats.LanguageFormat.ComponentNameFormat
  parent: DiagramModel.Commands.LanguageFormats.LanguageFormat
  name: ComponentNameFormat
  nameWithType: LanguageFormat.ComponentNameFormat
  fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat.ComponentNameFormat
- uid: DiagramModel.Commands.LanguageFormats.LanguageFormat.GetFormats(System.String)
  commentId: M:DiagramModel.Commands.LanguageFormats.LanguageFormat.GetFormats(System.String)
  parent: DiagramModel.Commands.LanguageFormats.LanguageFormat
  isExternal: true
  name: GetFormats(String)
  nameWithType: LanguageFormat.GetFormats(String)
  fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat.GetFormats(System.String)
  spec.csharp:
  - uid: DiagramModel.Commands.LanguageFormats.LanguageFormat.GetFormats(System.String)
    name: GetFormats
    nameWithType: LanguageFormat.GetFormats
    fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat.GetFormats
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiagramModel.Commands.LanguageFormats.LanguageFormat.GetFormats(System.String)
    name: GetFormats
    nameWithType: LanguageFormat.GetFormats
    fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat.GetFormats
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiagramModel.Commands.LanguageFormats.LanguageFormat.GetAllCommandFormats
  commentId: M:DiagramModel.Commands.LanguageFormats.LanguageFormat.GetAllCommandFormats
  parent: DiagramModel.Commands.LanguageFormats.LanguageFormat
  name: GetAllCommandFormats()
  nameWithType: LanguageFormat.GetAllCommandFormats()
  fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat.GetAllCommandFormats()
  spec.csharp:
  - uid: DiagramModel.Commands.LanguageFormats.LanguageFormat.GetAllCommandFormats
    name: GetAllCommandFormats
    nameWithType: LanguageFormat.GetAllCommandFormats
    fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat.GetAllCommandFormats
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiagramModel.Commands.LanguageFormats.LanguageFormat.GetAllCommandFormats
    name: GetAllCommandFormats
    nameWithType: LanguageFormat.GetAllCommandFormats
    fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat.GetAllCommandFormats
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DiagramModel.Commands.LanguageFormats.LanguageFormat.CommandFormats
  commentId: P:DiagramModel.Commands.LanguageFormats.LanguageFormat.CommandFormats
  parent: DiagramModel.Commands.LanguageFormats.LanguageFormat
  name: CommandFormats
  nameWithType: LanguageFormat.CommandFormats
  fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat.CommandFormats
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat.CommandFormats*
  commentId: Overload:DiagramModel.Commands.LanguageFormats.EnglishFormat.CommandFormats
  name: CommandFormats
  nameWithType: EnglishFormat.CommandFormats
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat.CommandFormats
- uid: Dictionary{System.String,List{System.String}}
  commentId: '!:Dictionary{System.String,List{System.String}}'
  definition: Dictionary`2
  name: Dictionary<String, List<String>>
  nameWithType: Dictionary<String, List<String>>
  fullName: Dictionary<System.String, List<System.String>>
  nameWithType.vb: Dictionary(Of String, List(Of String))
  fullName.vb: Dictionary(Of System.String, List(Of System.String))
  name.vb: Dictionary(Of String, List(Of String))
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: DiagramModel.Commands.LanguageFormats.LanguageFormat.ComponentNames
  commentId: P:DiagramModel.Commands.LanguageFormats.LanguageFormat.ComponentNames
  parent: DiagramModel.Commands.LanguageFormats.LanguageFormat
  name: ComponentNames
  nameWithType: LanguageFormat.ComponentNames
  fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat.ComponentNames
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat.ComponentNames*
  commentId: Overload:DiagramModel.Commands.LanguageFormats.EnglishFormat.ComponentNames
  name: ComponentNames
  nameWithType: EnglishFormat.ComponentNames
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat.ComponentNames
- uid: Dictionary{System.String,System.String}
  commentId: '!:Dictionary{System.String,System.String}'
  definition: Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DiagramModel.Commands.LanguageFormats.LanguageFormat.DelimiterFormat
  commentId: P:DiagramModel.Commands.LanguageFormats.LanguageFormat.DelimiterFormat
  parent: DiagramModel.Commands.LanguageFormats.LanguageFormat
  name: DelimiterFormat
  nameWithType: LanguageFormat.DelimiterFormat
  fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat.DelimiterFormat
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat.DelimiterFormat*
  commentId: Overload:DiagramModel.Commands.LanguageFormats.EnglishFormat.DelimiterFormat
  name: DelimiterFormat
  nameWithType: EnglishFormat.DelimiterFormat
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat.DelimiterFormat
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat.GetCode*
  commentId: Overload:DiagramModel.Commands.LanguageFormats.EnglishFormat.GetCode
  name: GetCode
  nameWithType: EnglishFormat.GetCode
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat.GetCode
- uid: DiagramModel.Commands.LanguageFormats.LanguageFormat.Code
  commentId: P:DiagramModel.Commands.LanguageFormats.LanguageFormat.Code
  parent: DiagramModel.Commands.LanguageFormats.LanguageFormat
  name: Code
  nameWithType: LanguageFormat.Code
  fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat.Code
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat.Code*
  commentId: Overload:DiagramModel.Commands.LanguageFormats.EnglishFormat.Code
  name: Code
  nameWithType: EnglishFormat.Code
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat.Code
- uid: DiagramModel.Commands.LanguageFormats.LanguageFormat.TargetValuesToReplace
  commentId: P:DiagramModel.Commands.LanguageFormats.LanguageFormat.TargetValuesToReplace
  parent: DiagramModel.Commands.LanguageFormats.LanguageFormat
  name: TargetValuesToReplace
  nameWithType: LanguageFormat.TargetValuesToReplace
  fullName: DiagramModel.Commands.LanguageFormats.LanguageFormat.TargetValuesToReplace
- uid: DiagramModel.Commands.LanguageFormats.EnglishFormat.TargetValuesToReplace*
  commentId: Overload:DiagramModel.Commands.LanguageFormats.EnglishFormat.TargetValuesToReplace
  name: TargetValuesToReplace
  nameWithType: EnglishFormat.TargetValuesToReplace
  fullName: DiagramModel.Commands.LanguageFormats.EnglishFormat.TargetValuesToReplace
