### YamlMime:ManagedReference
items:
- uid: DiagramModel.Components.ComponentFactory
  commentId: T:DiagramModel.Components.ComponentFactory
  id: ComponentFactory
  parent: DiagramModel.Components
  children:
  - DiagramModel.Components.ComponentFactory.CanCreateComponent(System.String)
  - DiagramModel.Components.ComponentFactory.CreateComponent(System.String,System.String,DiagramModel.Components.Component)
  langs:
  - csharp
  - vb
  name: ComponentFactory
  nameWithType: ComponentFactory
  fullName: DiagramModel.Components.ComponentFactory
  type: Class
  source:
    id: ComponentFactory
    path: ''
    startLine: 1232
  assemblies:
  - cs.temp.dll
  namespace: DiagramModel.Components
  summary: "\nProvides interface for creating components\nbased on their unique typename. To be used with add command.\n"
  example: []
  syntax:
    content: public class ComponentFactory
    content.vb: Public Class ComponentFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DiagramModel.Components.ComponentFactory.CanCreateComponent(System.String)
  commentId: M:DiagramModel.Components.ComponentFactory.CanCreateComponent(System.String)
  id: CanCreateComponent(System.String)
  parent: DiagramModel.Components.ComponentFactory
  langs:
  - csharp
  - vb
  name: CanCreateComponent(String)
  nameWithType: ComponentFactory.CanCreateComponent(String)
  fullName: DiagramModel.Components.ComponentFactory.CanCreateComponent(System.String)
  type: Method
  source:
    id: CanCreateComponent
    path: ''
    startLine: 1252
  assemblies:
  - cs.temp.dll
  namespace: DiagramModel.Components
  summary: "\nChecks whether component with the given typename can be created.\n"
  example: []
  syntax:
    content: public static bool CanCreateComponent(string type)
    parameters:
    - id: type
      type: System.String
      description: Component&apos;s default and unique typename.
    return:
      type: System.Boolean
      description: The result of the check.
    content.vb: Public Shared Function CanCreateComponent(type As String) As Boolean
  overload: DiagramModel.Components.ComponentFactory.CanCreateComponent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DiagramModel.Components.ComponentFactory.CreateComponent(System.String,System.String,DiagramModel.Components.Component)
  commentId: M:DiagramModel.Components.ComponentFactory.CreateComponent(System.String,System.String,DiagramModel.Components.Component)
  id: CreateComponent(System.String,System.String,DiagramModel.Components.Component)
  parent: DiagramModel.Components.ComponentFactory
  langs:
  - csharp
  - vb
  name: CreateComponent(String, String, Component)
  nameWithType: ComponentFactory.CreateComponent(String, String, Component)
  fullName: DiagramModel.Components.ComponentFactory.CreateComponent(System.String, System.String, DiagramModel.Components.Component)
  type: Method
  source:
    id: CreateComponent
    path: ''
    startLine: 1263
  assemblies:
  - cs.temp.dll
  namespace: DiagramModel.Components
  summary: "\nCreates new component from the provided typename, name and parent component.\nDoesn&apos;t do any validation checks as <xref href=\"DiagramModel.Components.ComponentFactory.CanCreateComponent(System.String)\" data-throw-if-not-resolved=\"false\"></xref> \nis designed for these. \n"
  example: []
  syntax:
    content: public static Component CreateComponent(string type, string name, Component parent)
    parameters:
    - id: type
      type: System.String
      description: Component&apos;s default and unique typename.
    - id: name
      type: System.String
      description: Component&apos;s name that should be passed in the constructor.
    - id: parent
      type: DiagramModel.Components.Component
      description: Parent component instance.
    return:
      type: DiagramModel.Components.Component
      description: ''
    content.vb: Public Shared Function CreateComponent(type As String, name As String, parent As Component) As Component
  overload: DiagramModel.Components.ComponentFactory.CreateComponent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DiagramModel.Components
  commentId: N:DiagramModel.Components
  name: DiagramModel.Components
  nameWithType: DiagramModel.Components
  fullName: DiagramModel.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DiagramModel.Components.ComponentFactory.CanCreateComponent*
  commentId: Overload:DiagramModel.Components.ComponentFactory.CanCreateComponent
  name: CanCreateComponent
  nameWithType: ComponentFactory.CanCreateComponent
  fullName: DiagramModel.Components.ComponentFactory.CanCreateComponent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DiagramModel.Components.ComponentFactory.CanCreateComponent(System.String)
  commentId: M:DiagramModel.Components.ComponentFactory.CanCreateComponent(System.String)
  isExternal: true
- uid: DiagramModel.Components.ComponentFactory.CreateComponent*
  commentId: Overload:DiagramModel.Components.ComponentFactory.CreateComponent
  name: CreateComponent
  nameWithType: ComponentFactory.CreateComponent
  fullName: DiagramModel.Components.ComponentFactory.CreateComponent
- uid: DiagramModel.Components.Component
  commentId: T:DiagramModel.Components.Component
  parent: DiagramModel.Components
  name: Component
  nameWithType: Component
  fullName: DiagramModel.Components.Component
